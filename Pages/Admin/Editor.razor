@page "/admin/books/edit/{id:long}"
@page "/admin/books/create"
@inherits OwningComponentBase<IBookstoreRepository>

<style>
    div.validation-message {color: silver; font-weight:500}
</style>

<h3 class="bg-@ThemeColor text-white text-center p-1"></h3>

<EditForm Model="b" OnValidSubmit="SaveBooks">

    <DataAnnotationsValidator></DataAnnotationsValidator>

        <div class="form-group">
            <label>Book Id:</label>
            <input class="form-control" disabled value="@b.BookId" />
        </div>

        <div class="form-group">
            <label>Title:</label>
            <ValidationMessage For="@(() => b.Title)"></ValidationMessage>
            <InputText class="form-control" @bind-Value="b.Title"></InputText>
        </div>

        <div class="form-group">
            <label>Author:</label>
            <ValidationMessage For="@(() => b.Author)"></ValidationMessage>
            <InputText class="form-control" @bind-Value="b.Author"></InputText>
        </div>

        <div class="form-group">
            <label>Publisher:</label>
            <ValidationMessage For="@(() => b.Publisher)"></ValidationMessage>
            <InputText class="form-control" @bind-Value="b.Publisher"></InputText>
        </div>

        <div class="form-group">
            <label>Classification:</label>
            <ValidationMessage For="@(() => b.Classification)"></ValidationMessage>
            <InputText class="form-control" @bind-Value="b.Classification"></InputText>
        </div>

        <div class="form-group">
            <label>Category:</label>
            <ValidationMessage For="@(() => b.Category)"></ValidationMessage>
            <InputText class="form-control" @bind-Value="b.Category"></InputText>
        </div>

        <div class="form-group">
            <label>Pagecount:</label>
            <ValidationMessage For="@(() => b.PageCount)"></ValidationMessage>
            <InputNumber class="form-control" @bind-Value="b.PageCount"></InputNumber>
        </div>

        <div class="form-group">
            <label>Price:</label>
            <ValidationMessage For="@(() => b.Price)"></ValidationMessage>
            <InputNumber class="form-control" @bind-Value="b.Price"></InputNumber>
        </div>

        <button type="submit" class="btn btn-@ThemeColor">Save</button>
        <NavLink class="btn btn-outline-secondary" href="/admin/books">Cancel</NavLink>


</EditForm>

@code {

    [Parameter]
    public long Id { get; set; } = 0;

    public string ThemeColor => Id == 0 ? "outline-primary" : "outline-warning";
    public string TitleText => Id == 0 ? "Create" : "Edit";

    public Books b { get; set; } = new Books();

    public IBookstoreRepository repo => Service;

    protected override void OnParametersSet()
    {
        if (Id != 0) //exsisting book 
        {
            b = repo.Books.FirstOrDefault(x => x.BookId == Id);
        }
    }

    public void SaveBooks()
    {
        if (Id != 0)
        {
            repo.CreateBook(b);
        }
        else
        {
            repo.SaveBook(b);
        }

        NavManager.NavigateTo("/admin/books");
    }

    [Inject]
    public NavigationManager NavManager { get; set; }

}
